#+TITLE: Einfuehrungsveranstaltung
#+DATE: 31.03.2023 PuC
* Herzlich Willkommen!
* Vorstellungsrunde
** Wer bin ich?

Christoph Hegemann (christoph.hegemann@th-koeln.de)

Professioneller Compiler Entwickler
Open Source Contributor
Konferenz Speaker
Im vierten Jahr Dozent fuer PuC

** Wer seid ihr?

1. Vorstellung

2. Erwartungen an den Kurs

3. Erfahrungen mit Funktionaler Programmierung?

4. Welche Programmiersprachen kennt/moegt ihr?

** Unser Umgang

  Wir gehen respektvoll und umsichtig miteinander um. Niemand muss Angst haben
  eine Frage zu stellen. Es gibt keine dummen Fragen.

  Wenn etwas unklar ist bitte ich um direkte Nachfrage, unterbrecht mich!

  Es ist auch immer moeglich mir eine E-Mail an christoph.hegemann@th-koeln.de zu
  schicken.

* Organisatorisches

** Vorlesungsformat

Die Vorlesung wird drei wesentliche Medien verwenden:

1. Slides
    Zu Beginn der Vorlesung verbringen wir eine kurze(!) Zeit mit Slides um den
    Inhalt der vorangegangenen Vorlesung kurz zu wiederholen.

2. Whiteboarding
    Dann werden wir am Whiteboard unser naechstes Thema einfuehren und besprechen.
    Anschliessend ...

3. Livecoding
    ... arbeiten wir *gemeinsam* an unserem Compiler, wobei ich tippen werde.
    Wir implementieren dabei die zuvor erarbeiteten Konzepte.

(4). Diskussion

** Ilias und Github

 Die Slides und aller Code wird auf Github veroeffentlicht. Das Repository
 befindet sich hier:

 https://github.com/kritzcreek/PuC-SS23

 Ueber das Ilias werden wichtige Nachrichten fuer die Kursteilnehmer
 verbreitet, achten Sie bitte auf ihre E-Mails!

** Abschlussprojekt

Etwa in der Mitte des Semesters werden wir fuer jeden Studierenden Projekte
festlegen. Diese werden in Gruppen von maximal zwei Studierenden bearbeitet.
Bei einer ungeraden Anzahl von Teilnehmern kann es eine Dreiergruppe geben.

Ich werde einige Themen vorschlagen, oder von Studierenden vorgeschlagene
Themen absegnen.

Am Semesterende wird dann jede Gruppe ihr Projekt in einer Praesentation vorstellen,
welche auf jeden Fall(!) eine Demonstration beinhalten wird.

Zeitrahmen:
ca. 15min Vortrag
10min Demo und Fragen

Fuer die Projekte fuehren wir eine eigene Anmeldung durch. Durch das Projekt wird
benotet, das Projekt kann aber abgebrochen werden. (Niemand faellt "durch")

** Zeit und Ort

Aktueller Plan ist die Vorlesung Freitags um 10 Uhr im Raum 2100 durchzufuehren.

Scheinbar gibt es leider Konflikte mit Pflichtvorlesungen.

- Wieviele Teilnehmer betrifft das?
- Sollen wir versuchen einen anderen Termin zu finden?


Konflikt mit KI Vorlesung fuer AI im 4. Semester, alternativer Termin:


Freitag:
** Vorraussetzungen und Resourcen

Wir werden Kotlin benutzen, ich empfehle die "Kotlin Koans" als kurze Einfuehrung:

https://play.kotlinlang.org/koans/overview

Buecher und Paper mit relevantem Hintergrund und mehr Details und Theorie werde ich
immer dann verlinken wenn wir das entsprechende Thema besprechen.

** WICHTIG! Anmeldung
  Bis zur naechsten Vorlesung eine Mail an christoph.hegemann@th-koeln.de (wichtig!)

  Inhalt:

  Ich Erika Musterfrau, moechte an PuC im Sommersemester 2023 teilnehmen.

  Ich studiere im Studiengang (AI/MI/WI, ... etc).

  Ich (habe vor/habe nicht vor) ein Projekt abzugeben.

  Ich habe/habe keinen Termin Konflikt mit der Vorlesung am Freitag um 10,
  (wenn ja) folgende Zeitraeume sind Freitags verfuegbar.
** Fragen zum Organisatorischen

- Was habe ich vergessen, was wollt ihr noch wissen?

* Was verstehen wir unter Compilern

** Programme fuer Programme

Es gibt Programme die als ihren Input andere Programme akzeptieren.

Ein Compiler ist ein solches Programm. Programme koennen andere Programme...

1. ... analysieren (Type checking, linting)
2. ... in andere Programme transformieren
       (In Maschinencode uebersetzen, automatisierte Refactorings)
3. ... ausfuehren oder simulieren (Interpretation, Symbolische Evaluierung)

Programme operieren auf Datenstrukturen.

Wenn wir also einen Compiler schreiben wollen, muessen wir einen Weg finden Programme als
Datenstruktur zu repraesentieren.

** Unsere erste Programmiersprache

=> Whiteboard
